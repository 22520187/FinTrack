// <auto-generated />
using System;
using FinTrack.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinTrack.Server.Migrations
{
    [DbContext(typeof(FinTrackDbContext))]
    [Migration("20250620164702_RemoveReportTypeConstraint")]
    partial class RemoveReportTypeConstraint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BudgetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetId"));

                    b.Property<decimal>("AmountLimit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("BudgetId")
                        .HasName("PK__Budgets__E38E79C4E0C60270");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.BudgetUsage", b =>
                {
                    b.Property<int>("UsageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsageId"));

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int")
                        .HasColumnName("BudgetID");

                    b.Property<DateTime?>("RecordedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("SpentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("UsageId")
                        .HasName("PK__BudgetUs__29B197C03BA12032");

                    b.HasIndex("BudgetId");

                    b.ToTable("BudgetUsage", (string)null);
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<float?>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2B7A15EB72");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Goal", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GoalID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly>("Deadline")
                        .HasColumnType("date");

                    b.Property<decimal?>("SavedAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("TargetAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("GoalId")
                        .HasName("PK__Goals__8A4FFF31BBA90498");

                    b.HasIndex("UserId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.GoalProgress", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProgressID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressId"));

                    b.Property<int?>("GoalId")
                        .HasColumnType("int")
                        .HasColumnName("GoalID");

                    b.Property<decimal>("SavedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ProgressId")
                        .HasName("PK__GoalProg__BAE29C85F5656B22");

                    b.HasIndex("GoalId");

                    b.ToTable("GoalProgress", (string)null);
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FileUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Period")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReportId")
                        .HasName("PK__Reports__D5BD48E52A1B09FE");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransactionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CategoryName");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsImportant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A4B73772192");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ward")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC6826032B");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534592F31FC")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Budget", b =>
                {
                    b.HasOne("FinTrack.Server.Models.Domain.Category", "Category")
                        .WithMany("Budgets")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Budgets__Categor__48CFD27E");

                    b.HasOne("FinTrack.Server.Models.Domain.User", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Budgets__UserID__47DBAE45");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.BudgetUsage", b =>
                {
                    b.HasOne("FinTrack.Server.Models.Domain.Budget", "Budget")
                        .WithMany("BudgetUsages")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__BudgetUsa__Budge__4D94879B");

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Category", b =>
                {
                    b.HasOne("FinTrack.Server.Models.Domain.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Categorie__UserI__3B75D760");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Goal", b =>
                {
                    b.HasOne("FinTrack.Server.Models.Domain.User", "User")
                        .WithMany("Goals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Goals__UserID__52593CB8");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.GoalProgress", b =>
                {
                    b.HasOne("FinTrack.Server.Models.Domain.Goal", "Goal")
                        .WithMany("GoalProgresses")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__GoalProgr__GoalI__59063A47");

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Report", b =>
                {
                    b.HasOne("FinTrack.Server.Models.Domain.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Reports__UserID__5DCAEF64");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Transaction", b =>
                {
                    b.HasOne("FinTrack.Server.Models.Domain.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Transacti__Categ__4316F928");

                    b.HasOne("FinTrack.Server.Models.Domain.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Transacti__UserI__403A8C7D");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Budget", b =>
                {
                    b.Navigation("BudgetUsages");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Category", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.Goal", b =>
                {
                    b.Navigation("GoalProgresses");
                });

            modelBuilder.Entity("FinTrack.Server.Models.Domain.User", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Categories");

                    b.Navigation("Goals");

                    b.Navigation("Reports");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
